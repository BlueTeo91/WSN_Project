###############################################################################
#                                                                             #
#                                                       08/Dec/2015  21:19:59 #
# IAR ANSI C/C++ Compiler V5.50.7.22081/W32 EVALUATION for ARM                #
# Copyright (C) 1999-2010 IAR Systems AB.                                     #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Documents and Settings\Administrator\Desktop\Copy of  #
#                    MyWirelessApp Demo Non Beacon (End                       #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\Application\Init\MApp_init.c                     #
#    Command line =  "C:\Documents and Settings\Administrator\Desktop\Copy    #
#                    of MyWirelessApp Demo Non Beacon (End                    #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\Application\Init\MApp_init.c" -D                 #
#                    gMacStandAlone_d=1 -D gSAPMessagesEnableLlc_d=0 -D       #
#                    gZtcIncluded_d=0 -D gTargetMC1322xSRB=1 --preprocess     #
#                    "C:\Documents and Settings\Administrator\Desktop\Copy    #
#                    of MyWirelessApp Demo Non Beacon (End                    #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\Debug\List\" -lC "C:\Documents and               #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\Debug\List\" -lB "C:\Documents and   #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\Debug\List\" --diag_suppress         #
#                    Pe014,Pe001,Pe991,Pa039,Pe520 -o "C:\Documents and       #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\Debug\Obj\" --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little                  #
#                    --cpu=ARM7TDMI-S --fpu=None --dlib_config "C:\Program    #
#                    Files\IAR Systems\Embedded Workbench 5.4                 #
#                    Evaluation\arm\INC\DLib_Config_Normal.h" -I              #
#                    "C:\Documents and Settings\Administrator\Desktop\Copy    #
#                    of MyWirelessApp Demo Non Beacon (End                    #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\MacPhy\Interface\" -I "C:\Documents and          #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\Application\Init\" -I "C:\Documents  #
#                    and Settings\Administrator\Desktop\Copy of               #
#                    MyWirelessApp Demo Non Beacon (End                       #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\Application\Interface\" -I "C:\Documents and     #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\Application\Configure\" -I           #
#                    "C:\Documents and Settings\Administrator\Desktop\Copy    #
#                    of MyWirelessApp Demo Non Beacon (End                    #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\Application\UartUtil\" -I "C:\Documents and      #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\Application\Source\" -I              #
#                    "C:\Documents and Settings\Administrator\Desktop\Copy    #
#                    of MyWirelessApp Demo Non Beacon (End                    #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\SSM\TS\Interface\" -I "C:\Documents and          #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\SSM\TS\Source\" -I "C:\Documents     #
#                    and Settings\Administrator\Desktop\Copy of               #
#                    MyWirelessApp Demo Non Beacon (End                       #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\SSM\ZTC\Interface\" -I "C:\Documents and         #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\SSM\ZTC\Source\" -I "C:\Documents    #
#                    and Settings\Administrator\Desktop\Copy of               #
#                    MyWirelessApp Demo Non Beacon (End                       #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\PLM\Interface\" -I "C:\Documents and             #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\PLM\LibInterface\" -I "C:\Documents  #
#                    and Settings\Administrator\Desktop\Copy of               #
#                    MyWirelessApp Demo Non Beacon (End                       #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\PLM\Source\Display\" -I "C:\Documents and        #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\PLM\Source\Keyboard\" -I             #
#                    "C:\Documents and Settings\Administrator\Desktop\Copy    #
#                    of MyWirelessApp Demo Non Beacon (End                    #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\PLM\Source\NVM\" -I "C:\Documents and            #
#                    Settings\Administrator\Desktop\Copy of MyWirelessApp     #
#                    Demo Non Beacon (End Device)\MyWirelessApp Demo Non      #
#                    Beacon (End Device)\PLM\Source\TMR\" -I "C:\Documents    #
#                    and Settings\Administrator\Desktop\Copy of               #
#                    MyWirelessApp Demo Non Beacon (End                       #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\PLM\Source\UART\" -I "C:\Program Files\IAR       #
#                    Systems\Embedded Workbench 5.4 Evaluation\arm\INC\"      #
#                    --interwork --cpu_mode thumb -On                         #
#    List file    =  C:\Documents and Settings\Administrator\Desktop\Copy of  #
#                    MyWirelessApp Demo Non Beacon (End                       #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\Debug\List\MApp_init.lst                         #
#    Object file  =  C:\Documents and Settings\Administrator\Desktop\Copy of  #
#                    MyWirelessApp Demo Non Beacon (End                       #
#                    Device)\MyWirelessApp Demo Non Beacon (End               #
#                    Device)\Debug\Obj\MApp_init.o                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Administrator\Desktop\Copy of MyWirelessApp Demo Non Beacon (End Device)\MyWirelessApp Demo Non Beacon (End Device)\Application\Init\MApp_init.c
      1          /*****************************************************************************
      2          * Applications' initialization module
      3          *
      4          * (c) Copyright 2007, Freescale, Inc. All rights reserved.
      5          *
      6          *
      7          * No part of this document must be reproduced in any form - including copied,
      8          * transcribed, printed or by any electronic means - without specific written
      9          * permission from Freescale Semiconductor.
     10          *
     11          *****************************************************************************/
     12          
     13          #include "Mapp_init.h"
     14          #include "MacPhyInit.h"
     15          #include "Mac_Globals.h"
     16          #include "NV_Data.h"
     17          #include "MacInit.h"
     18          #include "Interrupt.h"
     19          #if gZtcIncluded_d
     20          #include "ZTCInterface.h"
     21          #endif /* gZtcIncluded_d */
     22          #include "NVM_Interface.h"
     23          
     24          /************************************************************************************
     25          *************************************************************************************
     26          * Private macros
     27          *************************************************************************************
     28          ************************************************************************************/
     29          
     30          
     31          /************************************************************************************
     32          *************************************************************************************
     33          * Private prototypes
     34          *************************************************************************************
     35          ************************************************************************************/
     36          
     37          void IdleTask(event_t event);
     38          void AppTask(event_t events);

   \                                 In section .bss, align 1
     39          tsTaskID_t gAppTaskID_c;
   \                     gAppTaskID_c:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     40          uint8_t gPowerSaveMode;
   \                     gPowerSaveMode:
   \   00000000                      DS8 1
     41          
     42          /************************************************************************************
     43          *************************************************************************************
     44          * Private type definitions
     45          *************************************************************************************
     46          ************************************************************************************/
     47          
     48          /************************************************************************************
     49          *************************************************************************************
     50          * Private memory declarations
     51          *************************************************************************************
     52          ************************************************************************************/
     53          
     54          extern uint8_t aExtendedAddress[8];
     55          
     56          #if gNvStorageIncluded_d

   \                                 In section .bss, align 1
     57          static bool_t receiverOn;
   \                     receiverOn:
   \   00000000                      DS8 1
     58          #endif
     59          /************************************************************************************
     60          *************************************************************************************
     61          * Public functions
     62          *************************************************************************************
     63          ************************************************************************************/
     64          
     65          /*****************************************************************************
     66          * main function
     67          *
     68          * Interface assumptions:
     69          * 
     70          * Return value:
     71          * None
     72          *****************************************************************************/
     73          

   \                                 In section .text, align 2, keep-with-next
     74          void Main(void)
     75           {
   \                     Main:
   \   00000000   80B5               PUSH     {R7,LR}
     76            InterruptInit();
   \   00000002   ........           BL       InterruptInit
     77            IntDisableAll();
   \   00000006   ........           BL       IntDisableAll
     78            Platform_Init();
   \   0000000A   ........           BL       Platform_Init
     79            
     80          
     81            TS_Init();                            /* Init the kernel. */
   \   0000000E   ........           BL       TS_Init
     82            TMR_Init();                           /* Init the TMR module */							
   \   00000012   ........           BL       TMR_Init
     83            NvModuleInit();
   \   00000016   ........           BL       NvModuleInit
     84            Uart_ModuleInit();
   \   0000001A   ........           BL       Uart_ModuleInit
     85            /* This only creates the MAC TS thread. */
     86            MacInit();
   \   0000001E   ........           BL       MacInit
     87            /* Use TS for MAC  - the MAC TS ID must be known at this step. */
     88            Init_802_15_4(TRUE);
   \   00000022   0120               MOVS     R0,#+1
   \   00000024   ........           BL       Init_802_15_4
     89          
     90            #if gZtcIncluded_d
     91            Ztc_TaskInit();
     92            #endif /* gZtcIncluded_d */ 
     93          
     94            /*initialize the application*/ 
     95            gAppTaskID_c = TS_CreateTask(gTsAppTaskPriority_c, AppTask);
   \   00000028   ....               LDR      R1,??DataTable3
   \   0000002A   8020               MOVS     R0,#+128
   \   0000002C   ........           BL       TS_CreateTask
   \   00000030   ....               LDR      R1,??DataTable3_1
   \   00000032   0870               STRB     R0,[R1, #+0]
     96           
     97            MApp_init();
   \   00000034   ........           BL       MApp_init
     98            #if (gLpmIncluded_d == 1)
     99              /*do not allow the device to enter sleep mode*/
    100              PWR_DisallowDeviceToSleep();
   \   00000038   ........           BL       PWR_DisallowDeviceToSleep
    101            #endif /* gLpmIncluded_d == 1 */
    102           
    103            /*All LED's are switched OFF*/
    104            Led1Off();
   \   0000003C   0021               MOVS     R1,#+0
   \   0000003E   1720               MOVS     R0,#+23
   \   00000040   ........           BL       Gpio_SetPinData
    105            Led2Off();
   \   00000044   0021               MOVS     R1,#+0
   \   00000046   1820               MOVS     R0,#+24
   \   00000048   ........           BL       Gpio_SetPinData
    106            Led3Off();
   \   0000004C   0021               MOVS     R1,#+0
   \   0000004E   1920               MOVS     R0,#+25
   \   00000050   ........           BL       Gpio_SetPinData
    107            Led4Off();
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   2C20               MOVS     R0,#+44
   \   00000058   ........           BL       Gpio_SetPinData
    108            
    109            /* Start the task scheduler. Does not return. */
    110            TS_Scheduler(); 
   \   0000005C   ........           BL       TS_Scheduler
    111           
    112          }
   \   00000060   09BC               POP      {R0,R3}
   \   00000062   1847               BX       R3               ;; return
    113          #if gNvStorageIncluded_d
    114          

   \                                 In section .text, align 2, keep-with-next
    115          void BUtl_SetReceiverOff(void)
    116          {
   \                     BUtl_SetReceiverOff:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   85B0               SUB      SP,SP,#+20
    117           /* This function is called by the NVM component at the start of the NV operation */
    118           mlmeMessage_t msg;	  
    119           bool_t value; 
    120           /* get the receiver state */
    121           
    122           msg.msgType = gMlmeGetReq_c;
   \   00000004   6846               MOV      R0,SP
   \   00000006   0321               MOVS     R1,#+3
   \   00000008   0171               STRB     R1,[R0, #+4]
    123           msg.msgData.getReq.pibAttribute = gMPibRxOnWhenIdle_c;
   \   0000000A   01A8               ADD      R0,SP,#+4
   \   0000000C   5221               MOVS     R1,#+82
   \   0000000E   4170               STRB     R1,[R0, #+1]
    124           msg.msgData.getReq.pibAttributeValue = &value; 
   \   00000010   01A9               ADD      R1,SP,#+4
   \   00000012   891C               ADDS     R1,R1,#+2
   \   00000014   6846               MOV      R0,SP
   \   00000016   ........           BL       __aeabi_uwrite4
    125           (void)MSG_Send(NWK_MLME, &msg);
   \   0000001A   01A8               ADD      R0,SP,#+4
   \   0000001C   ........           BL       NWK_MLME_SapHandler
    126           
    127           if(value)
   \   00000020   6846               MOV      R0,SP
   \   00000022   0078               LDRB     R0,[R0, #+0]
   \   00000024   0028               CMP      R0,#+0
   \   00000026   14D0               BEQ      ??BUtl_SetReceiverOff_0
    128           {
    129            /* Turn off the receiver during NVM operation */
    130            receiverOn = TRUE;
   \   00000028   ....               LDR      R0,??DataTable3_2
   \   0000002A   0121               MOVS     R1,#+1
   \   0000002C   0170               STRB     R1,[R0, #+0]
    131            
    132            value = FALSE;
   \   0000002E   6846               MOV      R0,SP
   \   00000030   0021               MOVS     R1,#+0
   \   00000032   0170               STRB     R1,[R0, #+0]
    133            msg.msgType = gMlmeSetReq_c;
   \   00000034   6846               MOV      R0,SP
   \   00000036   0921               MOVS     R1,#+9
   \   00000038   0171               STRB     R1,[R0, #+4]
    134            msg.msgData.setReq.pibAttribute = gMPibRxOnWhenIdle_c;
   \   0000003A   01A8               ADD      R0,SP,#+4
   \   0000003C   5221               MOVS     R1,#+82
   \   0000003E   4170               STRB     R1,[R0, #+1]
    135            msg.msgData.setReq.pibAttributeValue = &value;
   \   00000040   01A9               ADD      R1,SP,#+4
   \   00000042   891C               ADDS     R1,R1,#+2
   \   00000044   6846               MOV      R0,SP
   \   00000046   ........           BL       __aeabi_uwrite4
    136            (void)MSG_Send(NWK_MLME, &msg);
   \   0000004A   01A8               ADD      R0,SP,#+4
   \   0000004C   ........           BL       NWK_MLME_SapHandler
   \   00000050   02E0               B        ??BUtl_SetReceiverOff_1
    137           }
    138           else
    139           {
    140            /* Receiver already turned off */
    141            receiverOn = FALSE;
   \                     ??BUtl_SetReceiverOff_0:
   \   00000052   ....               LDR      R0,??DataTable3_2
   \   00000054   0021               MOVS     R1,#+0
   \   00000056   0170               STRB     R1,[R0, #+0]
    142           }
    143           
    144          }
   \                     ??BUtl_SetReceiverOff_1:
   \   00000058   05B0               ADD      SP,SP,#+20
   \   0000005A   08BC               POP      {R3}
   \   0000005C   1847               BX       R3               ;; return
    145          

   \                                 In section .text, align 2, keep-with-next
    146          void BUtl_SetReceiverOn(void)
    147          {
   \                     BUtl_SetReceiverOn:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   85B0               SUB      SP,SP,#+20
    148           /* This function is called by the NVM component at the end of the NV operation */
    149           mlmeMessage_t msg;	  
    150           bool_t value = TRUE;
   \   00000004   6846               MOV      R0,SP
   \   00000006   0121               MOVS     R1,#+1
   \   00000008   0170               STRB     R1,[R0, #+0]
    151           if(receiverOn == TRUE)
   \   0000000A   ....               LDR      R0,??DataTable3_2
   \   0000000C   0078               LDRB     R0,[R0, #+0]
   \   0000000E   0128               CMP      R0,#+1
   \   00000010   0DD1               BNE      ??BUtl_SetReceiverOn_0
    152           {  
    153            /* Restore receiver state */
    154            msg.msgType = gMlmeSetReq_c;
   \   00000012   6846               MOV      R0,SP
   \   00000014   0921               MOVS     R1,#+9
   \   00000016   0171               STRB     R1,[R0, #+4]
    155            msg.msgData.setReq.pibAttribute = gMPibRxOnWhenIdle_c;
   \   00000018   01A8               ADD      R0,SP,#+4
   \   0000001A   5221               MOVS     R1,#+82
   \   0000001C   4170               STRB     R1,[R0, #+1]
    156            msg.msgData.setReq.pibAttributeValue = &value;
   \   0000001E   01A9               ADD      R1,SP,#+4
   \   00000020   891C               ADDS     R1,R1,#+2
   \   00000022   6846               MOV      R0,SP
   \   00000024   ........           BL       __aeabi_uwrite4
    157            (void)MSG_Send(NWK_MLME, &msg);
   \   00000028   01A8               ADD      R0,SP,#+4
   \   0000002A   ........           BL       NWK_MLME_SapHandler
    158           } 
    159          }
   \                     ??BUtl_SetReceiverOn_0:
   \   0000002E   05B0               ADD      SP,SP,#+20
   \   00000030   08BC               POP      {R3}
   \   00000032   1847               BX       R3               ;; return
    160          
    161          #endif
    162          
    163          /*****************************************************************************
    164          * Entry point to the idle task
    165          *
    166          * Interface assumptions:
    167          * Cannot use any call by which this task has to be suspended.This task should
    168          * always be ready to run if there are no other tasks in the system
    169          * 
    170          * Return value:
    171          * None
    172          *****************************************************************************/
    173          

   \                                 In section .text, align 2, keep-with-next
    174          void IdleTask(event_t events)
    175          {
   \                     IdleTask:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   0400               MOVS     R4,R0
    176            /* Just to avoid the compiler warning */
    177            (void)events;
    178           #if gNvStorageIncluded_d
    179            /* Process NV Storage save-on-idle and save-on-count requests. */
    180            NvIdle();
   \   00000004   ........           BL       NvIdle
    181           #endif
    182            #if (gLpmIncluded_d == 1)
    183            /*Low power management*/
    184              if(PWR_CheckIfDeviceCanGoToSleep())
   \   00000008   ........           BL       PWR_CheckIfDeviceCanGoToSleep
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   01D0               BEQ      ??IdleTask_0
    185                {
    186                PWR_EnterLowPower();
   \   00000010   ........           BL       PWR_EnterLowPower
    187                }
    188            #endif /*gLpmIncluded_d*/ 
    189          }
   \                     ??IdleTask_0:
   \   00000014   10BC               POP      {R4}
   \   00000016   08BC               POP      {R3}
   \   00000018   1847               BX       R3               ;; return
    190          
    191          
    192          /*****************************************************************************
    193          * Initialize the MAC 64 bit address
    194          *
    195          * Interface assumptions:
    196          * None
    197          * 
    198          * Return value:
    199          * None
    200          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    201          void Init_MacExtendedAddress( void ) 
    202          {
   \                     Init_MacExtendedAddress:
   \   00000000   00B5               PUSH     {LR}
   \   00000002   83B0               SUB      SP,SP,#+12
    203            uint8_t tempExtAddress[8]= {mDefaultValueOfExtendedAddress_c};
   \   00000004   6846               MOV      R0,SP
   \   00000006   ....               LDR      R1,??DataTable3_3
   \   00000008   0CC9               LDM      R1!,{R2,R3}
   \   0000000A   0CC0               STM      R0!,{R2,R3}
   \   0000000C   0839               SUBS     R1,R1,#+8
   \   0000000E   0838               SUBS     R0,R0,#+8
    204          
    205            if((gHardwareParameters.MAC_Address[0] == 0xFF)&&(gHardwareParameters.MAC_Address[1] == 0xFF)&&
    206               (gHardwareParameters.MAC_Address[2] == 0xFF)&&(gHardwareParameters.MAC_Address[3] == 0xFF)&&
    207               (gHardwareParameters.MAC_Address[4] == 0xFF)&&(gHardwareParameters.MAC_Address[5] == 0xFF)&&
    208               (gHardwareParameters.MAC_Address[6] == 0xFF)&&(gHardwareParameters.MAC_Address[7] == 0xFF))
   \   00000010   ....               LDR      R0,??DataTable3_4
   \   00000012   C079               LDRB     R0,[R0, #+7]
   \   00000014   FF28               CMP      R0,#+255
   \   00000016   1FD1               BNE      ??Init_MacExtendedAddress_0
   \   00000018   ....               LDR      R0,??DataTable3_4
   \   0000001A   007A               LDRB     R0,[R0, #+8]
   \   0000001C   FF28               CMP      R0,#+255
   \   0000001E   1BD1               BNE      ??Init_MacExtendedAddress_0
   \   00000020   ....               LDR      R0,??DataTable3_4
   \   00000022   407A               LDRB     R0,[R0, #+9]
   \   00000024   FF28               CMP      R0,#+255
   \   00000026   17D1               BNE      ??Init_MacExtendedAddress_0
   \   00000028   ....               LDR      R0,??DataTable3_4
   \   0000002A   807A               LDRB     R0,[R0, #+10]
   \   0000002C   FF28               CMP      R0,#+255
   \   0000002E   13D1               BNE      ??Init_MacExtendedAddress_0
   \   00000030   ....               LDR      R0,??DataTable3_4
   \   00000032   C07A               LDRB     R0,[R0, #+11]
   \   00000034   FF28               CMP      R0,#+255
   \   00000036   0FD1               BNE      ??Init_MacExtendedAddress_0
   \   00000038   ....               LDR      R0,??DataTable3_4
   \   0000003A   007B               LDRB     R0,[R0, #+12]
   \   0000003C   FF28               CMP      R0,#+255
   \   0000003E   0BD1               BNE      ??Init_MacExtendedAddress_0
   \   00000040   ....               LDR      R0,??DataTable3_4
   \   00000042   407B               LDRB     R0,[R0, #+13]
   \   00000044   FF28               CMP      R0,#+255
   \   00000046   07D1               BNE      ??Init_MacExtendedAddress_0
   \   00000048   ....               LDR      R0,??DataTable3_4
   \   0000004A   807B               LDRB     R0,[R0, #+14]
   \   0000004C   FF28               CMP      R0,#+255
   \   0000004E   03D1               BNE      ??Init_MacExtendedAddress_0
    209            {
    210              MacPhyInit_WriteExtAddress(tempExtAddress);
   \   00000050   6846               MOV      R0,SP
   \   00000052   ........           BL       MacPhyInit_WriteExtAddress
   \   00000056   03E0               B        ??Init_MacExtendedAddress_1
    211            }
    212            else
    213            {
    214              MacPhyInit_WriteExtAddress((unsigned char*)gHardwareParameters.MAC_Address);
   \                     ??Init_MacExtendedAddress_0:
   \   00000058   ....               LDR      R0,??DataTable3_4
   \   0000005A   C01D               ADDS     R0,R0,#+7
   \   0000005C   ........           BL       MacPhyInit_WriteExtAddress
    215            }
    216          }
   \                     ??Init_MacExtendedAddress_1:
   \   00000060   0FBC               POP      {R0-R3}
   \   00000062   1847               BX       R3               ;; return
    217          
    218          /******************************************************************************
    219          * BeeAppAssert
    220          *
    221          * Something failed in the stack or app that can't recover. Stop here. Mostly
    222          * used during debug phase of product. Could be used
    223          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    224          void BeeAppAssert
    225            (
    226            assertCode_t code /* IN: why the assert failed */
    227            )
    228          {
   \                     BeeAppAssert:
   \   00000000   80B5               PUSH     {R7,LR}
    229            volatile bool_t waitForever = code; /* just set to anything non-zero */
   \   00000002   6946               MOV      R1,SP
   \   00000004   0870               STRB     R0,[R1, #+0]
    230            
    231            while (waitForever)
   \                     ??BeeAppAssert_0:
   \   00000006   6946               MOV      R1,SP
   \   00000008   0978               LDRB     R1,[R1, #+0]
   \   0000000A   0029               CMP      R1,#+0
   \   0000000C   FBD1               BNE      ??BeeAppAssert_0
    232              { }
    233          }
   \   0000000E   09BC               POP      {R0,R3}
   \   00000010   1847               BX       R3               ;; return
    234          
    235          /******************************************************************************
    236          * Swap2Bytes
    237          *
    238          * Swaps two bytes
    239          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    240          uint16_t Swap2Bytes(uint16_t iOldValue)
    241          {
   \                     Swap2Bytes:
   \   00000000   01B4               PUSH     {R0}
    242            uint16_t iValue;
    243          
    244            iValue = ((uint8_t *)&iOldValue)[0] << 8;
   \   00000002   6946               MOV      R1,SP
   \   00000004   0978               LDRB     R1,[R1, #+0]
   \   00000006   0902               LSLS     R1,R1,#+8
   \   00000008   0800               MOVS     R0,R1
    245            iValue += ((uint8_t *)&iOldValue)[1];
   \   0000000A   6946               MOV      R1,SP
   \   0000000C   4978               LDRB     R1,[R1, #+1]
   \   0000000E   4018               ADDS     R0,R0,R1
    246          
    247            return iValue;
   \   00000010   0004               LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
   \   00000012   000C               LSRS     R0,R0,#+16
   \   00000014   01B0               ADD      SP,SP,#+4
   \   00000016   7047               BX       LR               ;; return
    248          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     AppTask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   ........           DC32     gAppTaskID_c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   ........           DC32     receiverOn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   ........           DC32     `?<Constant {255, 255, 255, 255, 255, 255, 255,`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   ........           DC32     gHardwareParameters

   \                                 In section .rodata, align 4
   \                     `?<Constant {255, 255, 255, 255, 255, 255, 255,`:
   \   00000000   FFFFFFFFFFFF       DC8 255, 255, 255, 255, 255, 255, 255, 255
   \              FFFF        
    249          
    250          /*******************************************************************************/
    251          
    252          

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     BUtl_SetReceiverOff         24
     BUtl_SetReceiverOn          24
     BeeAppAssert                 8
     IdleTask                     8
     Init_MacExtendedAddress     16
     Main                         8
     Swap2Bytes                   4


   Section sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     gAppTaskID_c                                      1
     gPowerSaveMode                                    1
     receiverOn                                        1
     Main                                            100
     BUtl_SetReceiverOff                              94
     BUtl_SetReceiverOn                               52
     IdleTask                                         26
     Init_MacExtendedAddress                         100
     BeeAppAssert                                     18
     Swap2Bytes                                       24
     ??DataTable3                                      4
     ??DataTable3_1                                    4
     ??DataTable3_2                                    4
     ??DataTable3_3                                    4
     ??DataTable3_4                                    4
     ?<Constant {255, 255, 255, 255, 255, 255, 255,    8

 
   3 bytes in section .bss
   8 bytes in section .rodata
 434 bytes in section .text
 
 434 bytes of CODE  memory
   8 bytes of CONST memory
   3 bytes of DATA  memory

Errors: none
Warnings: none
